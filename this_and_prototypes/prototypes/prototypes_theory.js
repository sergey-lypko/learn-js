// [[Prototype]] - это просто ссылка на другой объект

var ob = {
  a: 1
}

ob.a; // 1

// во время обращения к свойству объекта по-умолчанию выполняется
// оператор [[Get]], который прежде всего проверяет, содержит ли сам 
// объект искомое свойство 
// если свойство не найдено, [[Get]] отправится на поиски свойства 
// в другие объекты по цепочке прототипов

var anotherOb = {
  a: 1
}

var myOb = Object.create(anotherObject);

// фактически, myOb.a на самом деле не существует, однако это значение 
// было найдено в другом объекте, следую по цепочке вверх - anotherOb
myOb.a; // 1

// если свойство не было найдено в ближайшем объекте, такого рода ^ поиски 
// будут продолжаться до того момента, пока цепочка прототипов не закончится
// если свойство так и не было найдено, оператор [[Get]] вернет undefined

// операторы перебора и проверки свойств ищут свойства так же по цепочке прототипов:
var someOb = {
  a: 1
}

var greatOb = Object.create(someOb);

for (var k in greatOb) {
  console.log(k); 
}
// output: a

('a' in greatOb); // true



// Механизм поиска и добавления/изменения свойств в объектах
myObject.foo = 'bar';

// для выполнения такой процедуры ^ выполняются следующие шаги: 
// если объект содержит нормальный дескриптор данных для свойства 
// foo, присвоение представляет собой простую операцию изменения
// значения свойства 

// если конкретный объект не содержит свойства foо, 
