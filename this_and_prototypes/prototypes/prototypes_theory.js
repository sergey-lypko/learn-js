// [[Prototype]] - это просто ссылка на другой объект

// в JavaScript нет такого понятие как класс (как в традиционных ОО-языках)
// есть только объекты

// каждая функция имеет неперечисляемое свойство prototype, 
// которое ссылается на некий объект

// этот объект обычно зовется прототип Foo, потому что мы получаем доступ к нему
// через свойство, которое называется Foo.prototype (не совсем удачно)*  
// и которое является ссылкой на этот объект

// пусть этот объект (для меньшей путаницы) назовем Foo dot prototype
// в итоге каждый объект, созданный с помощью new Foo()
// в конечном итоге некоторым образом будет связан с этим объектом Foo dot prototype

function Foo() {}

// во время создания объекта через конструктор, одно из действий - 
// установка в myNewObject внутреней ссылки [[Prototype]] на объект, 
// на который указывает Foo.prototype
var myNewObject = new Foo();

// в данном контексте Foo.prototype - это объект, о котором идет речь выше - Foo dot prototype
// но ссылка, которая на него указывает, к несчастью выглядит таким же образом*
Object.getPrototypeOf(myNewObject) === Foo.prototype;


// важно снова подчеркнуть принципиальное отличае от традиционной внутренней ОО-механики:
// в класс-ориентированных языках может быть создано множество копий (экземпляров) класса,
// как будто штамповка прессом

// в то же время в JS не происходит действий копирования
// не создается множество экземпляров класса 
// но можно создать множество объектов, которые будут [[Prototype]]-linked
// с общим объектом
function Foo() {}

var firstObject = new Foo();
var secondObject = new Foo();



// Конструкторы
// в языке функции не могут являться конструкторами
// при создании объектов через new любая функция остается просто функцией
// но при вызове этой функции вместе с new мы вызываем конструктор

// NothingSpecial - это обыкновенная функция
// но при вызове ее вместе с new происходит вызов конструктора, а в результате - новый объект,
// который получает [[Prototype]]-ссылку
function NothingSpecial() {
  console.log('Do not mind me);
}
              
var a = new NothingSpecial();
a; // {}

  
  
// Механика работы прототипов

